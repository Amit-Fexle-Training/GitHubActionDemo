name: Validate Changes
on: workflow_dispatch
jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
         fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: "16.x"
            
      - name: Get npm cache directory
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
        
      - name: check cache
        uses: actions/cache@v3
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
          
      - name: Install Dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: |
          npm install sfdx-cli --global
          echo y | sfdx plugins:install sfdx-git-delta
          sfdx plugins
          
      - name: 'Populate auth file with QA_AUTH_URL secret'
        shell: bash
        run: |
            echo ${{ secrets.QA_AUTH_URL}} > ./QA_AUTH_URL.txt
            secretFileSize=$(wc -c "./QA_AUTH_URL.txt" | awk '{print $1}')
            if [ $secretFileSize == 1 ]; then
                echo "Missing QA_AUTH_URL secret. Is this workflow running on a fork?";
                exit 1;
            fi
      
      - name: Authenticate with QA 
        run: |
          sfdx force:auth:sfdxurl:store -f ./QA_AUTH_URL.txt -d -a devhub
            
      - name: 'Create delta packages for new, modified or deleted metadata'
        run: |
          sfdx sgd:source:delta --to "HEAD" --from "HEAD^" --output .

      - name: Print package.xml
        run: cat package/package.xml
      
      - name: Validate with QA
        run: |
          sfdx force:source:deploy --checkonly \
              --manifest=package/package.xml \
              --postdestructivechanges destructiveChanges/destructiveChanges.xml \
              --testlevel=RunLocalTests \
              -u devhub \
